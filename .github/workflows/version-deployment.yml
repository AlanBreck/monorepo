name: Deployment on version change

on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  changeset:
    if: github.event.pull_request.merged == true && github.event.pull_request.head.label == 'opral:changeset-release/main'
    name: Deployment on version update
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: '2' # Fetches the last two commits

      - name: Check for changes in editor
        id: editor_check
        run: |
          if git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep -q 'inlang/source-code/editor/package.json'; then
            echo "::set-output name=editor_changed::true"
          fi

      - name: Check for changes in manage
        id: manage_check
        run: |
          if git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep -q 'inlang/source-code/manage/package.json'; then
            echo "::set-output name=manage_changed::true"
          fi

      - name: Check for changes in badge
        id: badge_check
        run: |
          if git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep -q 'inlang/source-code/badge/package.json'; then
            echo "::set-output name=badge_changed::true"
          fi

      - name: Trigger redeploy for editor
        if: steps.editor_check.outputs.editor_changed == 'true'
        run: |
          echo "Triggering redeploy for editor via deploy hook"
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL_FINK }}

      - name: Trigger redeploy for manage
        if: steps.manage_check.outputs.manage_changed == 'true'
        run: |
          echo "Triggering redeploy for manage via deploy hook"
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL_MANAGE }}

      - name: Trigger redeploy for badge
        if: steps.badge_check.outputs.badge_changed == 'true'
        run: |
          echo "Triggering redeploy for badge via deploy hook"
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL_BADGE }}
