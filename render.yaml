previewsEnabled: false

# cost control for preview deployments.
# if no activity for 3 days, the preview deployment will be deleted.
previewsExpireAfterDays: 3

services:
  - name: inlang-website
    type: web
    runtime: node
    region: frankfurt
    plan: standard
    buildCommand: pnpm install && NX_REJECT_UNKNOWN_LOCAL_CACHE=0 pnpm run build --projects=@inlang/website
    startCommand: NX_REJECT_UNKNOWN_LOCAL_CACHE=0 pnpm production # configured in root package.json
    autoDeploy: true
    envVars:
      - key: PORT
        value: 3000 # @inlang/server
      - fromGroup: production
    buildFilter:
      paths:
        - inlang/source-code/website/**
        - inlang/source-code/markdown/**
        - inlang/source-code/marketplace-registry/**
        - '**/*.md'
    domains:
      - inlang.com

  - name: git-proxy
    type: web
    runtime: node
    region: frankfurt
    plan: starter
    # PR preview deployments use the shared production git-proxy
    # This disables branch previews for the git-proxy
    branch: main
    buildCommand: pnpm install && pnpm run build
    startCommand: pnpm --filter @lix-js/server production
    autoDeploy: true
    envVars:
      - key: PORT
        value: 3001
      - fromGroup: production
    buildFilter:
      paths:
        - lix/packages/server/**
    domains:
      - git.inlang.com

  - name: badge-service
    type: web
    runtime: node
    region: frankfurt
    plan: standard
    branch: main
    buildCommand: pnpm install && pnpm run build --projects=@inlang/badge
    startCommand: pnpm --filter @inlang/badge run production
    autoDeploy: false
    envVars:
      - fromGroup: production
    buildFilter:
      paths:
        - inlang/source-code/badge/**
    domains:
      - badge.inlang.com

  - name: fink-editor
    type: web
    runtime: node
    region: frankfurt
    plan: standard
    pullRequestPreviewsEnabled: false
    buildCommand: pnpm install && pnpm run --filter @inlang/editor... build
    startCommand: pnpm --filter @inlang/editor production
    autoDeploy: false
    envVars:
      - fromGroup: production
      - key: PORT
        value: 4003
    buildFilter:
      paths:
        - inlang/source-code/editor/**
    domains:
      - fink.inlang.com

  - name: inlang-manage
    type: web
    runtime: node
    region: frankfurt
    plan: standard
    pullRequestPreviewsEnabled: false
    buildCommand: pnpm install && pnpm run build
    startCommand: pnpm --filter @inlang/manage production
    autoDeploy: false
    envVars:
      - fromGroup: production
      - key: PORT
        value: 4004
    buildFilter:
      paths:
        - inlang/source-code/manage/**
    domains:
      - manage.inlang.com

  - name: opral-website
    type: web
    runtime: static
    autoDeploy: true
    staticPublishPath: ./opral/source-code/website
    buildFilter:
      paths:
        - opral/source-code/website/**
    domains:
      - opral.com

  - name: telemetry-proxy
    type: web
    runtime: node
    region: frankfurt
    plan: starter
    branch: main
    pullRequestPreviewsEnabled: false
    buildCommand: pnpm install && pnpm run --filter @inlang/telemetry-proxy build
    startCommand: pnpm run --filter @inlang/telemetry-proxy production
    autoDeploy: true
    envVars:
      - key: PORT
        value: 4005
    buildFilter:
      paths:
        - inlang/source-code/telemetry-proxy/**
    domains:
      - tm.inlang.com

  - name: telemetry-proxy-parrot
    type: web
    runtime: node
    region: frankfurt
    plan: starter
    branch: main
    pullRequestPreviewsEnabled: false
    buildCommand: pnpm install && pnpm run --filter @inlang/telemetry-proxy-parrot build
    startCommand: pnpm run --filter @inlang/telemetry-proxy-parrot production
    autoDeploy: true
    envVars:
      - key: PORT
        value: 4006
    buildFilter:
      paths:
        - inlang/source-code/telemetry-proxy-parrot/**
    domains:
      - telemetry.inlang.com
