# develop with docker-compose watch in this folder

name: lix
services:
  proxy:
    restart: always
    container_name: proxy
    image: proxy:6
    build:
      context: ./dev-server
    ports:
      - "80:80"
      # - "9229:9229"
    develop:
      watch:
        - action: sync
          path: ./dev-server/
          target: /workspace/
          ignore:
            - node_modules
            - .pnpm-store
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - pnpm-store:/root/.local/share/pnpm/store/v3

  gitea:
    labels: [ com.opral.lix.cors=exp.localhost ]
    image: gitea/gitea:latest
    container_name: gitea
    hostname: gitea
    environment:
      - USER_UID=1000
      - USER_GID=1000
    restart: always
    volumes:
      - ./gitea:/data
      # - /etc/timezone:/etc/timezone:ro - /etc/localtime:/etc/localtime:ro
    ports: ["3000"]

  runner:
    restart: always
    container_name: runner
    hostname: runner
    image: gitea/act_runner:latest
    environment:
      CONFIG_FILE: /config.yaml
      GITEA_INSTANCE_URL: "http://gitea:3000"
      GITEA_RUNNER_REGISTRATION_TOKEN: "pb3VkhEXa03IaQPUFSGPP2nImshQYvr72d1ZYH3Z"
      GITEA_RUNNER_NAME: "local"
      GITEA_RUNNER_LABELS: ""
    volumes:
      - ./gitea/runner/config.yaml:/config.yaml
      - ./gitea/runner:/data
      - /var/run/docker.sock:/var/run/docker.sock

  exp:
    restart: always
    container_name: exp
    hostname: exp
    image: exp:6
    build:
      dockerfile_inline: |
        FROM node:20
        RUN apt upgrade && apt update
        RUN apt-get install openssl curl libssl-dev -y
        RUN npm -g install pnpm
        COPY --chown=app:app . /workspace
        RUN chmod +x /workspace/dev.sh
        WORKDIR /workspace
    ports: [ "3334"]
    entrypoint: /bin/bash ./dev.sh
    develop:
      watch:
        - action: sync
          path: ./
          target: /workspace/
          ignore:
            - node_modules
            - .pnpm-store
    volumes:
      - pnpm-store:/root/.local/share/pnpm/store/v3

  # josh:
  #   image: joshproject/josh-proxy:latest
  #   platform: linux/amd64
  #   ports:["8000"]
  #   environment:
  #     JOSH_REMOTE: https://github.com/opral
  #     JOSH_EXTRA_OPTS: "--require-auth"
  #   volumes:
  #     - josh-vol:/data/git

volumes:
  pnpm-store: {}
